method:
  id: sincell
  name: Sincell
  tool_id: sincell
  source: tool
  platform: R
  url: https://github.com/Cortalak/MCA_Sincell_0
  license: GPL (>= 2)
  authors:
  - given: Antonio
    family: Rausell
    email: antonio.rausell@institutimagine.org
    github: Cortalak
  - given: Miguel
    family: Julia
    email: migueljuliamolina@gmail.com


manuscript:
  doi: 10.1093/bioinformatics/btv368
  google_scholar_cluster_id: '15532374725723489101'
  preprint_date: '2015-01-27'
  publication_date: '2015-06-22'

container:
  url: https://github.com/dynverse/ti_sincell
  docker: dynverse/ti_sincell

wrapper:
  type: cell_graph
  topology_inference: free
  trajectory_types:
  - linear
  - bifurcation
  - convergence
  - multifurcation
  - tree
  input_required: expression

parameters:
  - id: distance_method
    type: character
    default: euclidean
    values:
    - euclidean
    - cosine
    - pearson
    - spearman
    - L1
    - MI
    description: Distance method to be used. The available distances are the Euclidean
      distance (method="euclidean"), Manhattan distance (also called L1 distance,
      method="L1"), cosine distance (method="cosine") , distance based on Pearson
      (method="pearson") or Spearman (method="spearman") correlation coefficients,
      and distance based on Mutual Information (method="MI"). Intervals used to assess
      Mutual Information are indicated in the parameter 'bins'.
  - id: dimred_method
    type: character
    default: none
    values:
    - none
    - PCA
    - ICA
    - tSNE
    - classical-MDS
    - nonmetric-MDS
    description: 'Dimensionality reduction algorithm to be used. Options are: Principal
      Component Analysis (method="PCA"), Independent Component Analysis (method="ICA";
      using fastICA() function in fastICA package), t-Distributed Stochastic Neighbor
      Embedding (method="tSNE"; using Rtsne() function in Rtsne package with parameters
      tsne.perplexity=1 and tsne.theta=0.25), classical Multidimensional Scaling (method="classical-MDS";
      using the cmdscale() function) and non-metric Multidimensional Scaling (method="nonmetric-MDS";using
      the isoMDS() function in MASS package). if method="PCA" is chosen, the proportion
      of variance explained by each of the principal axes is plotted. We note that
      Sincell makes use of the Rtsne implementation of the Barnes-Hut algorithm, which
      approximates the likelihood. The user should be aware that this is a less accurate
      version of t-SNE than e.g. the one used as basis of viSNE (Amir,E.D. et al.
      2013, Nat Biotechnol 31, 545-552).'
  - id: clust.method
    type: character
    default: max.distance
    values:
    - max.distance
    - percent
    - knn
    - k-medoids
    - ward.D
    - ward.D2
    - single
    - complete
    - average
    - mcquitty
    - median
    - centroid
    description: "\nIf clust.method=\"max.distance\", clusters are defined as subgraphs
      generated by a maximum pair-wise distance cut-off, that is: from a totally connected
      graph where all cells are connected to each other, the algorithm only keeps
      pairs of cells connected by a distance lower than a given threshold.\n\nIf clust.method=\"percent\",
      clusters are defined as subgraphs generated by a given rank-percentile of the
      shortest pair-wise distances, that is; from a totally connected graph where
      all cells are connected to each other, the algorithm only keeps the top 'x'
      percent of shortest pairwise distances as indicated by \"shortest.rank.percent\".\n\nIf
      clust.method=\"knn\", unsupervised K-Nearest Neighbors (K-NN) clustering is
      performed: From a totally disconnected graph where none of the cells are connected
      to each other, the algorithm connects each cell to its 'k' nearest neighbors.
      If parameter \"mutual=TRUE\", Unsupervised K-Mutual Nearest Neighbours (K-MNN)
      clustering is performed, that is: only reciprocal k nearest neighbors are connected.\n\nIf
      clust.method=\"k-medoids\", clustering around medoids (a more robust version
      of k-means) is performed with function \"pam\" from package \"cluster\" on the
      distance matrix in mySincellObject$cell2celldist with a desired number of groups
      indicated in parameter \"num.clusters\"\n\nHierarchical agglomerative clustering
      can be performed by internally calling function \"hclust\" where the agglomeration
      method is indicated in parameter \"clust.method\" as one of \"ward.D\", \"ward.D2\",
      \"single\", \"complete\", \"average\" (= UPGMA), \"mcquitty\" (= WPGMA), \"median\"
      (= WPGMC) or \"centroid\" (= UPGMC). Clusters are obtained by cutting the tree
      produced by hclust with function cutree with a desired number of groups indicated
      in parameter \"num.clusters\" \n\n"
  - id: mutual
    type: logical
    default: yes
    description: 'If clust.method="knn" and "mutual=TRUE", Unsupervised K-Mutual Nearest Neighbours (K-MNN) clustering is performed, that is only reciprocal k nearest neighbors are connected'
  - id: max.distance
    type: numeric
    default: 0
    distribution:
      type: uniform
      lower: 0
      upper: 5
    description: 'in max.distance algorithm, select up to which distance the points will be linked'
  - id: k
    type: integer
    default: 3
    distribution:
      type: uniform
      lower: 1
      upper: 99
    description: 'If clust.method="knn", k is an integer specifying the number of nearest neighbors to consider in K-NN and K-KNN'
  - id: shortest.rank.percent
    type: numeric
    default: 10
    distribution:
      type: uniform
      lower: 0
      upper: 100
    description: 'in percent algorithm, select the percent of shortest distances will be represented as links'
  - id: graph.algorithm
    type: character
    default: MST
    values:
    - MST
    - SST
    - IMC
    description: 'Graph building algorithm to be used; the Minimum Spanning Tree (`graph.algorithm="MST"`), the Maximum Similarity Spanning Tree (`graph.algorithm="SST"`) and the Iterative Mutual Clustering Graph (`graph.algorithm="IMC"`).'
  - id: graph.using.cells.clustering
    type: logical
    default: no
    description: If graph.using.cells.clustering=TRUE and graph.algorithm="MST" or graph.algorithm="MST", a precalculated clustering of cells is used. The clustering of cells is taken from SincellObject$cellsClustering as calculated by function sc_clusterObj().
  - id: k_imc
    type: integer
    default: 3
    distribution:
      type: uniform
      lower: 1
      upper: 99
    description: If IMC algorithm is selected, the number of nearest neighbors used
      in the underlying K-Mutual Nearest Neighbour (K-MNN) algorithm is set to k.
  - id: pct_leaf_node_cutoff
    type: numeric
    default: 0.5
    distribution:
      type: uniform
      lower: 0.01
      upper: 0.8
    description: Leaf nodes are iteratively removed until the percentage of leaf nodes
      is below the given cutoff. Removed nodes are projected to their closest neighbour.
      This is to constrain the number of milestones being created.
